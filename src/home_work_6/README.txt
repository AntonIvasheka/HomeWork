MainBuffS           Класс реализующий решение пунктов 2.1, 2.2 и 5.1
                    2.1 Находит и помещает в коллекцию Set все использованные(уникальные) слова, выводит в консоль их
                    количество.
                    2.2 Находит наиболее часто используемые слова , выводит первые N(количество слов задаётся) записей.
                    5.1 Реализует интерфейс ISearchEngine, выводит информацию как часто встречаются слова "война", "и"
                    (как союз), "мир" - как есть.
                    5.2* Реализует интерфейс ISearchEngine, выводит информацию как часто встречаются слова "война", "и"
                    (как союз), "мир" - вне зависимости от регистра.
ISearchEngine       Интерфейс п.3. Содержит метод, который возвращает информациию о количестве раз которое встречается
                    слово в тексте. Первый параметр текст в котором ищем, второй параметр что ищем в тексте.
EasySearch          Класс реализующий поиск, используя метод indexOf из класса String. В данной реализации запрещено
                    использовать регулярные выражения в любом виде, для любых задач. Данный класс ищет слова с учётом
                    регистра. п. 4.1
BookList            Класс поиска в определённом файле из списка файлов. Результат записывается в файла result.txt в
                    формате «Имя файла – слово – количество». п.7
RegExSearch         Реализует интерфейс ISearchEngine, а поиск реалиизуется при помощи класса Matcher. Поиск с учётом
                    регистра. п. 4.2*
SearchEnginePunctuationNormalizer    Декоратор для ISearchEngine, удаляющий нежелательные символы. п.4.3*
SearchEngineWithout Reg              Декоратор для ISearchEngine, ищет данные без учёта регистра. п.4.4*
StreamSearch                         Класс с точкой входа. При запуске программы пользователь должен
                                     передать адрес папки, из которой мы будет считывать текстовые файлы. После запуска
                                     пользователь указывает что он хочет найти в этих текстах. После каждого ввода
                                     осуществляется поиск. Вводит пока не надоест. Поиск выполняется многопоточно.
                                     Один файл – одно задание для поиска. Задания помещаются в ExecutorService.
                                     Результат всех его поисков должен накапливаться в файла result.txt в формате
                                     «Имя файла – слово – количество».
                                     После заверщение обработки всех книг вывести записанные результаты в файла
                                     result.txt; п.8
SearchEngineCaseNormalizer           Декоратор, учитывающий разные падежи. Решил сделать от обратного - смысл примерно
                                     одинаковый, мне лично не нравится.
src/home_work_6/books                Директория с книгами.
src/tests/home_work_6/HW6tests       Тесты, согласно п.6